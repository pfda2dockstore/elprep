# Generated by precisionFDA exporter (v1.0.3) on 2018-06-13 22:59:44 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: elprep, revision: 19, authored by: pascal.costanza
# https://precision.fda.gov/apps/app-BkkyFZ80xz5V8pggK90ZPz6Q

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Install app-specific Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	python

# Download app assets
RUN curl https://dl.dnanex.us/F/D/19Jzjpbfjqpx1Zp5y9KJGG4gQ8pjz9pkxJV7972X/elprep-v2.36.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/BPjF57gjZgXpQQpFP1b9kZb98J43x5Y6Y0QFx52P/samtools-1.2.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"input\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Input\\ file\\\",\\\"help\\\":\\\"The\\ input\\ file.\\ Can\\ be\\ in\\ sam,\\ bam,\\ or\\ cram\\ format.\\\"\\},\\{\\\"name\\\":\\\"output_name\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Output\\ file\\\",\\\"help\\\":\\\"The\\ name\\ of\\ the\\ output\\ file.\\ Can\\ be\\ in\\ sam,\\ bam,\\ or\\ cram\\ format.\\\"\\},\\{\\\"name\\\":\\\"nr_of_threads\\\",\\\"class\\\":\\\"int\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Number\\ of\\ threads\\\",\\\"help\\\":\\\"This\\ option\\ sets\\ the\\ number\\ of\\ threads\\ elPrep\\ uses\\ during\\ execution.\\\",\\\"default\\\":1\\},\\{\\\"name\\\":\\\"sfm\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Split/filter/merge\\ mode\\\",\\\"help\\\":\\\"Option\\ for\\ splitting\\ the\\ input\\ per\\ chromosome,\\ processing\\ the\\ smaller\\ input\\ files,\\ and\\ finally\\ merging\\ the\\ partial\\ results.\\\",\\\"default\\\":false\\},\\{\\\"name\\\":\\\"clean_sam\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Clean\\ sam\\\",\\\"help\\\":\\\"This\\ filter\\ fixes\\ alignments:\\ it\\ soft-clips\\ alignments\\ that\\ hang\\ off\\ the\\ end\\ of\\ its\\ reference\\ sequence,\\ and\\ sets\\ the\\ mapping\\ quality\\ to\\ 0\\ if\\ the\\ alignment\\ is\\ unmapped.\\\",\\\"default\\\":false\\},\\{\\\"name\\\":\\\"filter_unmapped_reads\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Filter\\ unmapped\\ reads\\\",\\\"help\\\":\\\"This\\ filter\\ removes\\ all\\ alignments\\ in\\ the\\ input\\ file\\ that\\ are\\ unmapped.\\ An\\ alignment\\ is\\ determined\\ unmapped\\ when\\ bit\\ 0x4\\ of\\ its\\ FLAG\\ is\\ set.\\\",\\\"default\\\":false\\},\\{\\\"name\\\":\\\"filter_unmapped_reads_strict\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Filter\\ unmapped\\ reads,\\ strict\\ mode.\\\",\\\"help\\\":\\\"This\\ filter\\ removes\\ all\\ alignments\\ in\\ the\\ input\\ file\\ that\\ are\\ unmapped.\\ An\\ alignment\\ is\\ determined\\ unmapped\\ when\\ bit\\ 0x4\\ of\\ its\\ FLAG\\ is\\ set,\\ or\\ where\\ the\\ mapping\\ position\\ \\(POS\\)\\ is\\ 0,\\ or\\ where\\ the\\ reference\\ sequence\\ name\\ \\(RNAME\\)\\ is\\ \\*.\\\",\\\"default\\\":false\\},\\{\\\"name\\\":\\\"mark_duplicates\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Mark\\ duplicates\\\",\\\"help\\\":\\\"This\\ filter\\ identifies\\ and\\ marks\\ the\\ duplicate\\ reads\\ in\\ the\\ input\\ file\\ by\\ setting\\ bit\\ 0x400\\ of\\ their\\ FLAG.\\\",\\\"default\\\":false\\},\\{\\\"name\\\":\\\"remove_duplicates\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Remove\\ duplicates\\\",\\\"help\\\":\\\"This\\ filter\\ identifies\\ and\\ removes\\ the\\ duplicate\\ reads.\\\",\\\"default\\\":false\\},\\{\\\"name\\\":\\\"replace_reference_sequences\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Replace\\ reference\\ sequence\\\",\\\"help\\\":\\\"This\\ filter\\ is\\ used\\ for\\ replacing\\ the\\ header\\ of\\ a\\ .sam/.bam/.cram\\ file\\ by\\ a\\ new\\ header.\\ The\\ format\\ of\\ the\\ new\\ header\\ can\\ either\\ be\\ a\\ .dict\\ file,\\ or\\ another\\ .sam/.bam/.cram\\ file\\ from\\ which\\ the\\ new\\ header\\ is\\ extracted.\\\"\\},\\{\\\"name\\\":\\\"replace_read_group\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Replace\\ read\\ group\\\",\\\"help\\\":\\\"This\\ filter\\ replaces\\ or\\ adds\\ read\\ groups\\ to\\ the\\ alignments\\ in\\ the\\ input\\ file.\\ The\\ string\\ passed\\ here\\ can\\ be\\ any\\ string\\ conforming\\ to\\ a\\ header\\ line\\ for\\ tag\\ @RG,\\ omitting\\ the\\ tag\\ @RG\\ itself,\\ and\\ using\\ whitespace\\ as\\ separators\\ for\\ the\\ line\\ instead\\ of\\ TABs.\\\"\\},\\{\\\"name\\\":\\\"sorting_order\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Sorting\\ order\\\",\\\"help\\\":\\\"This\\ option\\ determines\\ the\\ order\\ of\\ the\\ alignments\\ in\\ the\\ output\\ file,\\ performing\\ a\\ sort\\ on\\ the\\ input\\ if\\ necessary.\\ Possible\\ values:\\ keep,\\ unknown,\\ unsorted,\\ queryname,\\ coordinate.\\\",\\\"default\\\":\\\"keep\\\",\\\"choices\\\":\\[\\\"keep\\\",\\\"coordinate\\\",\\\"queryname\\\",\\\"unsorted\\\",\\\"unknown\\\"\\]\\},\\{\\\"name\\\":\\\"reference_T\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Reference\\ file\\ for\\ .cram\\ conversion\\\",\\\"help\\\":\\\"A\\ fasta\\ format\\ reference\\ file\\ used\\ by\\ SAMtools\\ for\\ .cram\\ compression,\\ optionally\\ compressed\\ with\\ bgzip\\ and\\ indexed\\ by\\ samtools\\ faidx.\\ elPrep\\ uses\\ it\\ to\\ fill\\ in\\ the\\ \\\\\\\"-T\\\\\\\"\\ option\\ when\\ calling\\ the\\ samtools\\ view\\ command\\ for\\ converting\\ to\\ .cram.\\\"\\},\\{\\\"name\\\":\\\"reference_t\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Fai\\ file\\ for\\ .cram\\ conversion\\\",\\\"help\\\":\\\"A\\ tab-delimited\\ file,\\ where\\ a\\ first\\ column\\ lists\\ the\\ reference\\ names\\ and\\ a\\ second\\ column\\ lists\\ the\\ lengths\\ of\\ those\\ references\\;\\ for\\ example,\\ a\\ .fai\\ file\\ generated\\ with\\ samtools\\ faidx.\\ elPrep\\ uses\\ it\\ to\\ fill\\ in\\ the\\ \\\\\\\"-t\\\\\\\"\\ option\\ when\\ calling\\ the\\ samtools\\ view\\ command\\ for\\ converting\\ to\\ .cram.\\\"\\},\\{\\\"name\\\":\\\"gc_level\\\",\\\"class\\\":\\\"int\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Garbage\\ collection\\ level\\\",\\\"help\\\":\\\"This\\ option\\ configures\\ garbage\\ collection\\ during\\ the\\ elPrep\\ execution.\\ Possible\\ values:\\ 0,\\ 1,\\ 2.\\\",\\\"default\\\":0,\\\"choices\\\":\\[0,1,2\\]\\},\\{\\\"name\\\":\\\"intermediate_files_output_type\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Output\\ type\\ for\\ intermediate\\ files\\\",\\\"help\\\":\\\"The\\ output\\ type\\ that\\ will\\ be\\ used\\ for\\ intermediate\\ split\\ files\\ in\\ split/filter/merge\\ mode.\\ Possible\\ values:\\ sam\\ \\(default\\),\\ bam,\\ cram.\\\",\\\"choices\\\":\\[\\\"sam\\\",\\\"bam\\\",\\\"cram\\\"\\]\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"output\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Output\\ file\\\",\\\"help\\\":\\\"The\\ output\\ file.\\\"\\}\\],\\\"internet_access\\\":false,\\\"instance_type\\\":\\\"himem-32\\\"\\},\\\"assets\\\":\\[\\\"file-BkgJvyj0kXpPy764z17v3V44\\\",\\\"file-Bk5K6000qVb2Z7Q7qVJGZq5z\\\"\\],\\\"packages\\\":\\[\\\"python\\\"\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"PATH\\=elprep:\\$PATH\\\\ncommand\\=\\\\\\\"elprep_entrypoint.py\\\\\\\"\\\\n\\\\nif\\ \\[\\ \\\\\\\"\\$sfm\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ sfm\\\\\\\"\\\\nfi\\\\n\\\\ncommand\\=\\\\\\\"\\$command\\ \\$input_path\\ \\$output_name\\\\\\\"\\\\n\\\\nif\\ \\[\\[\\ \\\\\\\"\\$reference_T\\\\\\\"\\ \\!\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --reference-T\\ \\$reference_T_path\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\[\\ \\\\\\\"\\$reference_t\\\\\\\"\\ \\!\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --reference-t\\ \\$reference_t_path\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\[\\ \\\\\\\"\\$replace_reference_sequences\\\\\\\"\\ \\!\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --replace-reference-sequences\\ \\$replace_reference_sequences_path\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\[\\ \\\\\\\"\\$filter_unmapped_reads\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\]\\ \\|\\|\\ \\[\\[\\ \\\\\\\"\\$filter_unmapped_reads_strict\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --filter-unmapped-reads\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\ \\\\\\\"\\$filter_unmapped_reads_strict\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ strict\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\[\\ \\\\\\\"\\$replace_read_group\\\\\\\"\\ \\!\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --replace-read-group\\ \\\\\\\\\\\\\\\"\\$replace_read_group\\\\\\\\\\\\\\\"\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\[\\ \\\\\\\"\\$mark_duplicates\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\]\\ \\|\\|\\ \\[\\[\\ \\\\\\\"\\$remove_duplicates\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --mark-duplicates\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\ \\\\\\\"\\$remove_duplicates\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ remove\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\[\\ \\\\\\\"\\$clean_sam\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --clean-sam\\\\\\\"\\\\nfi\\\\n\\\\ncommand\\=\\\\\\\"\\$command\\ --sorting-order\\ \\$sorting_order\\ --nr-of-threads\\ \\$nr_of_threads\\ --gc-on\\ \\$gc_level\\\\\\\"\\\\n\\\\nif\\ \\[\\[\\ \\\\\\\"\\$intermediate_files_output_type\\\\\\\"\\ \\!\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\\\nthen\\\\n\\ \\ command\\=\\\\\\\"\\$command\\ --intermediate-files-output-type\\ \\$intermediate_files_output_type\\\\\\\"\\\\nfi\\\\n\\\\nif\\ \\$command\\\\nthen\\\\n\\ \\ emit\\ output\\ \\$output_name\\\\nelse\\\\n\\ \\ cat\\ /root/logs/elprep/elprep\\*.log\\\\nfi\\\\n\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work